// <auto-generated />
using System;
using Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220217142459_Monsters")]
    partial class Monsters
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.Entities.ItemDrop", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ItemCat")
                        .HasColumnType("int");

                    b.Property<int>("ItemIndex")
                        .HasColumnType("int");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Luck")
                        .HasColumnType("int");

                    b.Property<Guid?>("MapDropId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MonsterId")
                        .HasColumnType("int");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<int>("Skill")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MapDropId");

                    b.ToTable("ItemDrop");
                });

            modelBuilder.Entity("Domain.Entities.MapDrop", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MapId")
                        .HasColumnType("int");

                    b.Property<int>("TotalRate")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MapDrop");
                });

            modelBuilder.Entity("Domain.Entities.Monster", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Monster");
                });

            modelBuilder.Entity("Domain.Map", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Map");
                });

            modelBuilder.Entity("Domain.Entities.ItemDrop", b =>
                {
                    b.HasOne("Domain.Entities.MapDrop", null)
                        .WithMany("ItemDrops")
                        .HasForeignKey("MapDropId");
                });

            modelBuilder.Entity("Domain.Entities.MapDrop", b =>
                {
                    b.Navigation("ItemDrops");
                });
#pragma warning restore 612, 618
        }
    }
}
